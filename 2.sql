use hotel_db;
/*Добавить гостя*/
INSERT INTO `hotel_db`.`гость` VALUES ( 11 , "Козлов Петр Романович", "1989.01.21", "6897 687668", '' , '-');
/*Редактировать гостя (ФИО)*/
UPDATE `hotel_db`.`гость` SET `ФИО` = 'Козликов Петр Романович' WHERE (`idГость` = '11');
/*Внести в чёрный список*/
INSERT INTO `hotel_db`.`черный список` (`Причина`, `id_гостя`) VALUES ('Домогательство до соседок', '11');
/*Добавить сотрудника*/
INSERT INTO `hotel_db`.`администратор` (`idАдминистратор`, `ФИО`) VALUES ('11', 'Сапиронова Майя Игоревна');
/*Редактировать сотрудника*/
UPDATE `hotel_db`.`горничная` SET `ФИО` = 'Бобра Тамара Мефодьевна' WHERE (`idГорничная` = '1');
/*Удалить сотрудника*/
DELETE FROM `hotel_db`.`администратор` where (`idАдминистратор` = '11');
/*Бронь по заданным параметрам*/
INSERT INTO `hotel_db`.`бронь` (`idБронь`, `Кол-во гостей`, `Дата начала`, `Дата конца`, `id категории`, `id гостя`)  values ('11', '2', '2020-11-20', '2020-11-25', '4', '11');
/*Вести учет номеров(вывести номера на ремонте)*/
SELECT `Номер` FROM `hotel_db`.`номер` WHERE `состояние` = 'на ремонте';
/*Предоставить список свободных номеров, где цена за ночь меньше 4 000 и оценкой больше 2*/
SELECT `Номер` FROM `hotel_db`.`номер` WHERE  `состояние` = 'готов' AND `Цена за ночь` < 4000 AND `Оценка номера` > 2;
/*Вывести информацию о госте Липова Светлана Игоревна и её прошлых заездах */
SELECT * FROM `hotel_db`.`гость` WHERE `ФИО`='Липова Светлана Игоревна ';
/*Вывести информацию о сотруднике с id = 3*/
SELECT * FROM `hotel_db`.`администратор` WHERE `idАдминистратор` = "3";
/*Вывести информацию о текущем состоянии 8 номера */
SELECT `Номер`,`Состояние` FROM `hotel_db`.`номер` WHERE `Номер` = "8";
/*Самый востребованный номер*/
SELECT `Номер`
FROM hotel_db.`запись о заселении`
GROUP BY `Номер`
ORDER BY count(*) DESC
LIMIT 1;
/*Список постоянных клиентов*/
SELECT * FROM `hotel_db`.`гость` WHERE `Информация о прошлых заездах`!='';
/*Стоимость проживания в 5 записи о заселении*/
SELECT `Длительность проживания`, `Цена за ночь`,`idЗапись о заселении`
FROM hotel_db.`запись о заселении`
JOIN `Номер` ON `запись о заселении`.`Номер` = `Номер`.`Номер`
WHERE `idЗапись о заселении`='5';
/*Средний срок пребывания в отеле*/
SELECT avg(`Длительность проживания`) AS Средний_срок_пребывания_в_отеле FROM `hotel_db`.`запись о заселении`;	
/*Рейтинг номеров*/
SELECT * FROM `hotel_db`.`номер` WHERE `Оценка номера` ORDER BY `Оценка номера`DESC;


UPDATE `hotel_db`.`черный список` SET `Причина` = 'Порча иммущества  (холодильник в номере)' WHERE (`id_гостя` = '7');
UPDATE `hotel_db`.`гость` SET `Паспортные данные` = '4031 291366' WHERE (`idГость` = '8');
UPDATE `hotel_db`.`номер` SET `Состояние` = 'готов' WHERE (`Номер` = '10');
UPDATE `hotel_db`.`набор особенностей` SET `Животные` = 'нельзя' WHERE (`idНабор особенностей` = '10');
UPDATE `hotel_db`.`категория номера` SET `Кол-во доп мест за доп платы` = '2' WHERE (`idКатегория номера` = '3');
UPDATE `hotel_db`.`администратор` SET `ФИО` = 'Гершковича Азалия Анатолиевна ' WHERE (`idАдминистратор` = '2');
UPDATE `hotel_db`.`бронь` SET `Дата конца` = '2020-11-29' WHERE (`idБронь` = '11');
UPDATE `hotel_db`.`запись о заселении` SET `Номер` = '10' WHERE (`idЗапись о заселении` = '9');


DELETE FROM `hotel_db`.`черный список` WHERE (`id_гостя` = '10');
DELETE FROM `hotel_db`.`администратор` WHERE (`idАдминистратор` = '11');
DELETE FROM `hotel_db`.`набор особенностей` WHERE (`idНабор особенностей` = '11');
DELETE FROM `hotel_db`.`бронь` WHERE (`idБронь` = '11');
DELETE FROM `hotel_db`.`горничная` WHERE (`idГорничная` = '11');



INSERT INTO `ttg`.`паспортные_данные` (`серия`, `номер`, `дата_рождения`, `адрес`) VALUES ('1834', '783467', '1994-09-12', 'ул.Севрная д.45');
INSERT INTO `ttg`.`ежедневная_выручка` (`ежедневная_выручка_id`, `день`, `водитель_id`, `сумма`) VALUES ('11', '2020-03-11', '3', '2234');
INSERT INTO `ttg`.`водитель` (`водитель_id`, `ФИО`, `номер_телефона`, `серия_паспорта`, `номер_паспорта`, `номер_смены`) VALUES ('11', 'Петров Валерий Михайлович', '89043337456', '1834', '783467', '2');
INSERT INTO `ttg`.`владелец` (`владелец_id`, `ФИО`) VALUES ('11', 'Букин Геннадий Викторович');
INSERT INTO `ttg`.`тс` (`номер`, `модель`, `дата_выпуска`, `вместимость`, `состояние`, `водитель_id`, `марка`) VALUES ('В263ОН134rus', 'A700', '2015-04-23', '14', 'Эксплуатируется', '11', 'Mercedes');
INSERT INTO `ttg`.`маршрут` (`номер_маршрута`, `владелец_id`) VALUES ('43', '11');
INSERT INTO `ttg`.`рейс` (`рейс_id`, `дата`, `время_начала`, `время_окончания`, `номер_маршрута`) VALUES ('11', '2020-01-22', '08:02:02', '16:22:12', '43');
INSERT INTO `ttg`.`время_работы` (`время_работы_id`, `время_окончания`, `время_начала`) VALUES ('11', '09:30:00', '15:00:00');
INSERT INTO `ttg`.`график` (`график_id`, `день_недели`, `номер_смены`, `время_работы_id`) VALUES ('11', 'Пт', '2', '11');
INSERT INTO `ttg`.`остановка` (`остановка_id`, `название`, `местоположение`) VALUES ('11', 'Больница №1', 'ул. Карла Маркса д.11');
INSERT INTO `hotel_db`.`администратор` (`idАдминистратор`, `ФИО`) VALUES ('11', 'Максимова Мария Степановна');
INSERT INTO `hotel_db`.`набор особенностей` (`idНабор особенностей`, `Кухня`, `Бассейн`, `Ванная`, `Кондиционер`, `Напольное покрытие`, `Вид`, `Спальные места`, `Животные`) VALUES ('11', 'нет', 'нет', 'ванная', 'есть', 'плитка', 'на море', 'раздельные', 'нельзя');
INSERT INTO `hotel_db`.`горничная` (`idГорничная`, `ФИО`) VALUES ('11', 'Пирогова Алина Сергеевна');


SELECT `idГорничная`,`ФИО` FROM `hotel_db`.`горничная` WHERE `ФИО` LIKE 'К%';
SELECT `Номер` FROM `hotel_db`.`номер` WHERE `Состояние` LIKE 'уборка';
SELECT `idГость`,`ФИО` FROM `hotel_db`.`гость` WHERE `Привилегии` LIKE '+';
SELECT `id_гостя`,`Причина` FROM `hotel_db`.`черный список` WHERE `Причина` LIKE 'Порча иммущества';
SELECT `idЗапись о заселении`,`Кол-во гостей`,`Длительность проживания` FROM `hotel_db`.`запись о заселении` WHERE `Способ оплаты` LIKE 'карта';


SELECT COUNT(`Номер`) AS Количество_номеров FROM `hotel_db`.`номер`;
SELECT MAX(`Цена за ночь`) AS Самый_дорогой_номер FROM `hotel_db`.`номер`;
SELECT MIN(`Кол-во гостей`) AS Минимальное_количество_гостей_в_номере FROM `hotel_db`.`запись о заселении`;


SELECT `idНабор особенностей` FROM `hotel_db`.`набор особенностей` WHERE `Ванная` LIKE 'Душ' LIMIT 3;
SELECT `Причина` FROM `hotel_db`.`черный список` WHERE `Причина` LIKE 'Драка' LIMIT 2;
SELECT `idГость`,`ФИО` FROM `hotel_db`.`гость` WHERE `Привилегии` LIKE '+' LIMIT 5;

/*Вывести список приемки номеров */
SELECT `idзапись о выселении`, `ФИО`
FROM `администратор`
INNER JOIN `Запись о выселении`
ON  `Запись о выселении`.`id администратора`=`администратор`.`idАдминистратор`;
/*Вывести список номеров и ФИО горничных,которые их убирали */
SELECT `id_номера`, `ФИО`
FROM `номер/горничная`
INNER JOIN `горничная`
ON  `горничная`.`idГорничная`=`номер/горничная`.`id_горничной`;
/*Вывести какие бывают виды из окон*/
 SELECT DISTINCT `вид` as count FROM `набор особенностей`;
/*Вывести ФИО гостей и их возраст*/
 SELECT `ФИО`, (YEAR(CURRENT_DATE) - YEAR(`Дата рождения`)) -                         
(DATE_FORMAT(CURRENT_DATE, '%m%d') < DATE_FORMAT(`Дата рождения`, '%m%d')) 
AS возраст
FROM `гость`;
/*Вывести ФИО гостей и номер в котором они живут*/
SELECT `ФИО`, `номер`
FROM `гость/заселение`
INNER JOIN `гость`
ON  `гость`.`idГость`=`гость/заселение`.`гость`
INNER JOIN `запись о заселении`
ON  `запись о заселении`.`idЗапись о заселении`=`гость/заселение`.`запись о заселении`;

/*Вывести номер и все особенности*/
SELECT `Номер`,`Кухня`, `Бассейн`, `Ванная`, `Кондиционер`, `Напольное покрытие`, `Вид`, `Спальные места`, `Животные`
FROM   `номер`
INNER JOIN `набор особенностей`
ON  `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`;
/*Вывести сколько имеется номеров с разным рейтингом*/
SELECT `Оценка номера`,COUNT(`Номер`) AS `Количество номеров`
FROM `Номер`
GROUP BY `Оценка номера`
HAVING COUNT(`Оценка номера`); 



/*Вывести все брони за октябрь 2012 года*/
SELECT * 
FROM `бронь` 
WHERE `Дата начала` BETWEEN "2012-10-01" AND "2012-10-31";
CREATE INDEX `Дата начала` ON `бронь`(`Дата начала`);
SELECT * 
FROM `бронь` 
WHERE `Дата начала` BETWEEN "2012-10-01" AND "2012-10-31";






/*Вывести список номеров и уброщиц за которыми они закреплены*/
SELECT `Номер`,`ФИО`
FROM `номер/горничная`
INNER JOIN `номер`
ON  `Номер`.`номер`=`номер/горничная`.`id_номера`
INNER JOIN `горничная`
ON  `горничная`.`idГорничная`=`номер/горничная`.`id_горничной`
ORDER BY `Номер` ASC;




/*Номера занятые по брони */
SELECT `Номер`,`Состояние`
FROM `номер`
WHERE `Состояние`= "забронирован";
CREATE INDEX `Состояние` ON `номер`(`Состояние`);
SELECT `Номер`,`Состояние`
FROM `номер`
WHERE `Состояние`= "забронирован";




/*Список выездов на 26.04.2017*/
SELECT `ФИО`,`Дата выселения`
FROM `гость/выселение`
INNER JOIN `гость`
ON `гость`.`idГость`=`гость/выселение`.`id гостя`
INNER JOIN `запись о выселении`
ON `запись о выселении`.`idзапись о выселении`=`гость/выселение`.`id записи о выселении`
WHERE `Дата выселения`= '2017.04.26';
CREATE INDEX `Дата выселения` ON `запись о выселении`(`Дата выселения`);

 
 


/*Найти номер с бассейном и кухней*/
SELECT `номер`
FROM `номер` 
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `Кухня`= 'есть' AND `Бассейн`= 'есть';

DROP INDEX `Кухня` ON `набор особенностей`;





/*Найти номер без кондиционера, но с видом на море*/
SELECT `номер`
FROM `номер` 
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `Кондиционер`= 'нет' AND `Вид`= 'на море';

/*Вывести список свободных номеров, куда можно поселиться с животным*/
SELECT `номер`
FROM `номер` 
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `Животные`= 'можно' AND `Состояние`= 'готов';

/*Вывести свободные номера на 3 гостей */
SELECT `номер`,`Кол-во мест без доп платы`,`Кол-во доп мест за доп платы`
FROM `номер/категория` 
INNER JOIN `категория номера`
ON `категория номера`.`idКатегория номера`=`номер/категория`.`id_категории` 
INNER JOIN `номер`
ON `номер`.`Номер`=`номер/категория`.`id_номера`
WHERE (`Кол-во мест без доп платы`+`Кол-во доп мест за доп платы`)>=3 AND `Состояние`= 'готов';

/*Посмотреть гостя из черного списка и вывести есть ли у него привилегии*/
SELECT `ФИО`,`Привилегии`
FROM `гость` 
INNER JOIN `черный список`
ON `черный список`.`id_гостя`=`гость`.`idГость`
ORDER BY `Привилегии` ASC ;

/*Самый популярный способ оплаты*/
 SELECT `Способ оплаты`
FROM `запись о заселении`
GROUP BY `Способ оплаты`
ORDER BY count(*) DESC
LIMIT 1;

/*Вывести паспортные данные  Аршавина Артемия Юриевича */
SELECT `ФИО`, `паспортные данные`
FROM `гость`
WHERE `ФИО`='Аршавин Артемий Юриевич ';
CREATE INDEX `ФИО` ON `гость`(`ФИО`);




/*Вывести все брони на 2-х гостей */
SELECT `idБронь`, `Дата начала`,`Дата конца`
FROM `бронь`
WHERE `Кол-во гостей`= 2;
CREATE INDEX `Кол-во гостей` ON `бронь`(`Кол-во гостей`);





/*Самая популярная категория номера по брони*/
SELECT `Наименование`
FROM `бронь`,`категория номера`
GROUP BY `id категории`
ORDER BY count(*) DESC
LIMIT 1;

/*Вывести полный список характеристик 9 номера*/
SELECT `Номер`,`Наименование`,`Цена за ночь`,`Кухня`,`Бассейн`,`Ванная`,`Кондиционер`,`Напольное покрытие`,`Вид`,`Спальные места`,`Животные`
FROM `номер`
INNER JOIN `номер/категория`
ON `номер`.`Номер`=`номер/категория`.`id_номера`
INNER JOIN `категория номера`
ON `номер/категория`.`id_категории`=`категория номера`.`idКатегория номера`
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `номер`= 9;

/*Кол-во заездов людей*/
SELECT `ФИО`,count(*) AS `Количество заездов`
FROM  `гость/заселение`
INNER JOIN `гость`
ON `гость`.`idГость`=`гость/заселение`.`гость`
GROUP BY `гость`
ORDER BY count(*) DESC;

/*Вывести количество номеров с кухней*/
SELECT count(*) AS `Количество номеров с кухней`
FROM `номер`
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `кухня`= 'есть';

/*Все свободные номера с плиткой или с видом на сад*/
SELECT `номер`
FROM `номер` 
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE (`Напольное покрытие`= 'плитка'OR `вид`= 'на сад') AND `состояние`= 'готов';

/*Количество броней, который человек сделал*/
SELECT `ФИО`,'Янзинов Никифор Андронович ' AS `Количество броней`
FROM `бронь` 
INNER JOIN `гость`
ON `бронь`.`id гостя`=`гость`.`idГость`
GROUP BY `id гостя`
ORDER BY count(*) DESC;

/*Какой способ оплаты предпочитает гость Янзинов Никифор Андронович */ 
SELECT `ФИО`,`Способ оплаты`,count(*) AS 'Количество платежей даннным способом оплаты'
FROM `гость/заселение`
INNER JOIN `гость`
ON `гость`.`idГость`=`гость/заселение`.`гость`
INNER JOIN `запись о заселении`
ON `запись о заселении`.`idЗапись о заселении`=`гость/заселение`.`запись о заселении`
WHERE `ФИО`='Янзинов Никифор Андронович '
GROUP BY `Способ оплаты`
ORDER BY count(*) DESC;

/*Вывести ФИО человека и причину внесения в чс*/
SELECT `ФИО`,`Причина`
FROM `гость` 
INNER JOIN `черный список`
ON `черный список`.`id_гостя`=`гость`.`idГость`;

/*Вывести пожелания Кошечкиной Инессы Семеновны  при заселении*/
SELECT `ФИО`,`Комментарий`
FROM `гость/заселение`
INNER JOIN `гость`
ON `гость`.`idГость`=`гость/заселение`.`гость`
INNER JOIN `запись о заселении`
ON `запись о заселении`.`idЗапись о заселении`=`гость/заселение`.`запись о заселении`
WHERE `ФИО`='Кошечкина Инесса Семеновна ';

/*Добавить в таблицу гость колонку "телефонный номер" */
ALTER TABLE `hotel_db`.`гость`
ADD COLUMN `Номер телефона` VARCHAR(54) NOT NULL;
/*Частично заполним колонку "телефонный номер" в таблице гость */
UPDATE `hotel_db`.`гость` SET `Номер телефона` = '88005553535' WHERE (`idГость` = '1');
UPDATE `hotel_db`.`гость` SET `Номер телефона` = '88585953835' WHERE (`idГость` = '2');
UPDATE `hotel_db`.`гость` SET `Номер телефона` = '89061665568' WHERE (`idГость` = '6');
UPDATE `hotel_db`.`гость` SET `Номер телефона` = '89275415585' WHERE (`idГость` = '8');
UPDATE `hotel_db`.`гость` SET `Номер телефона` = '89023869277' WHERE (`idГость` = '4');
/*Найти номер телефона Панариной Жанны Марковны*/
SELECT `ФИО`,`Номер телефона`
FROM `гость` 
WHERE `ФИО`='Панарина Жанна Марковна ';
/*Найти номер телефона гостя из 3 номера*/
SELECT `ФИО`,`Номер телефона`
FROM `гость/заселение`
INNER JOIN `гость`
ON `гость`.`idГость`=`гость/заселение`.`гость`
INNER JOIN `запись о заселении`
ON `запись о заселении`.`idЗапись о заселении`=`гость/заселение`.`запись о заселении`
WHERE `Номер`='3';

/*Найти номера телефона гостей, которые выехали  13.02.2016 */
SELECT `ФИО`,`Номер телефона`
FROM `гость/выселение`
JOIN `гость`
ON `гость/выселение`.`id гостя`=`гость`.`idГость`
JOIN `запись о выселении` 
ON `запись о выселении`.`idзапись о выселении`=`гость/выселение`.`id записи о выселении`
WHERE `Дата выселения`='2016-02-13';

/*Удалить колонку "номер телефона"*/
ALTER TABLE `hotel_db`.`гость`
DROP COLUMN `Номер телефона`;

/*Самая популярная длительность проживания*/
SELECT `Длительность проживания` AS `Самая популярная длительность проживания`
FROM `запись о заселении`
GROUP BY `Длительность проживания`
ORDER BY count(*) DESC
LIMIT 1;


/*Создать новую временную таблицу */
CREATE TABLE `Рум-Сервис-Ресторан`(
`id_записи о заказе` int unsigned not null auto_increment,
`idГостя` int unsigned not null,
`сумма оплаты` smallint unsigned not null,
`заказ` varchar(255) not null,
`дата` date  not null,
primary key(`id_записи о заказе`),
foreign key(`idГостя`)
references `гость`(`idГость`)
on delete restrict
on update cascade);
/* Заполним новую временную таблицу */
INSERT INTO `hotel_db`.`рум-сервис-ресторан` (`id_записи о заказе`, `idГостя`, `сумма оплаты`, `заказ`, `дата`) VALUES ('1', '1', '1120', 'Чай, Омлет, Пирог с мясом', '2020-02-07');
INSERT INTO `hotel_db`.`рум-сервис-ресторан` (`id_записи о заказе`, `idГостя`, `сумма оплаты`, `заказ`, `дата`) VALUES ('2', '6', '2500', 'Сок, Паста Карбонара, Брауни, Кофе, Пицца Максима, Вино Шато Скориков', '2020-03-01');
INSERT INTO `hotel_db`.`рум-сервис-ресторан` (`id_записи о заказе`, `idГостя`, `сумма оплаты`, `заказ`, `дата`) VALUES ('3', '2', '700', 'Кофе, Круассан и Каша ', '2014-12-25');
INSERT INTO `hotel_db`.`рум-сервис-ресторан` (`id_записи о заказе`, `idГостя`, `сумма оплаты`, `заказ`, `дата`) VALUES ('4', '1', '4000', 'Фуа-гра, Беляш Казанский, Эчпочмак, Чак-чак, Борщ,Сало,Хлеб Бородинский', '2014-02-27');

/*Найти заказы от 2020-03-01*/
SELECT `ФИО`,`id_записи о заказе`AS `Номер заказа`,`заказ`,`сумма оплаты`
FROM `рум-сервис-ресторан`
INNER JOIN `гость`
ON `гость`.`idГость`=`рум-сервис-ресторан`.`idГостя`
WHERE `дата`='2020-03-01';

/*Найти заказы Липовой Светланы Игоревны*/
SELECT `ФИО`,`id_записи о заказе`AS `Номер заказа`,`заказ`,`сумма оплаты`
FROM `рум-сервис-ресторан`
INNER JOIN `гость`
ON `гость`.`idГость`=`рум-сервис-ресторан`.`idГостя`
WHERE `ФИО`='Липова Светлана Игоревна ';

/* Удалим новую временную таблицу */
DROP TABLE `Рум-Сервис-Ресторан`;


-- Поиск свободных номеров
DELIMITER $$
DROP PROCEDURE IF EXISTS free$$
CREATE PROCEDURE free(sostoyanie varchar(255))
DETERMINISTIC
READS SQL DATA
BEGIN
	SELECT * FROM `номер`
	WHERE `Состояние`= sostoyanie;
END$$

-- Поиск ФИО человека и причину внесения в чс
DROP PROCEDURE IF EXISTS Blacklist$$
CREATE PROCEDURE Blacklist()
DETERMINISTIC
READS SQL DATA
BEGIN
	SELECT `ФИО`,`Причина`
    FROM `гость` 
    JOIN `черный список`
    ON `черный список`.`id_гостя`=`гость`.`idГость`;
    END$$
    
-- Поиск ФИО гостей, старше 30
DROP PROCEDURE IF EXISTS ages$$
CREATE PROCEDURE ages(IN a int)
DETERMINISTIC
READS SQL DATA
BEGIN
	SELECT `ФИО`,(YEAR(CURRENT_DATE) - YEAR(`Дата рождения`)) -                         
    (DATE_FORMAT(CURRENT_DATE, '%m%d') < DATE_FORMAT(`Дата рождения`, '%m%d')) 
	AS Возраст
    FROM `гость` 
    WHERE ((YEAR(CURRENT_DATE) - YEAR(`Дата рождения`)) -                         
    (DATE_FORMAT(CURRENT_DATE, '%m%d') < DATE_FORMAT(`Дата рождения`, '%m%d'))) >=a;
        END$$
DELIMITER ;
Call ages(45);
Call Blacklist();
Call free('готов');

DELIMITER $$
-- Считает сколько номеров закреплены за горничными
DROP FUNCTION IF EXISTS HouseKeeping$$
CREATE FUNCTION HouseKeeping(nameHKM VARCHAR(255))
RETURNS VARCHAR(255)
DETERMINISTIC
READS SQL DATA
BEGIN
	DECLARE CHECKHKP VARCHAR(255) default 'Нет данных';
    DECLARE counter int default 0;
    
    SELECT COUNT(*) INTO counter 
    FROM `горничная`
	JOIN  `номер/горничная`
    ON `номер/горничная`.`id_горничной`=`горничная`.`idГорничная`
    WHERE `горничная`.`ФИО` LIKE nameHKM ;
    IF counter > 0
		THEN    
        SET CHECKHKP=CONCAT('Количество номеров, закрепленных за данной горничной = ',counter);
    END IF;
    RETURN CHECKHKP;
    END$$
DELIMITER ;
SELECT HouseKeeping('Ярлыкова Лидия Потаповна ');


DELIMITER $$
-- Ищет номера с заданными данными и возвращает найденные
DROP FUNCTION IF EXISTS SearchForNum$$
CREATE FUNCTION SearchForNum(State VARCHAR (50), Price INT, Pets VARCHAR (25), vid VARCHAR (25))
RETURNS VARCHAR(255)
DETERMINISTIC
READS SQL DATA
BEGIN
	DECLARE isFound VARCHAR(45) default 'Не найдено';
    DECLARE counter int default 0;
    
    SELECT COUNT(*) INTO counter 
    FROM `номер`
    JOIN  `набор особенностей`
    ON `номер`.`id_набора особенностей`=`набор особенностей`.`idНабор особенностей`
    WHERE `номер`.`состояние` LIKE State and `номер`.`Цена за ночь` < Price and
    `набор особенностей`.`Животные` LIKE Pets and `набор особенностей`.`вид` LIKE vid ;
    IF counter > 0
		THEN SET isFound=CONCAT('Найдено',' ',counter);
    END IF;
    RETURN isFound;
    END$$
DELIMITER ;
SELECT SearchForNum('готов',5000,'нельзя','на море');


DELIMITER $$
-- Считает прибыль номера за все время
DROP FUNCTION IF EXISTS CountPribil$$
CREATE FUNCTION CountPribil(num INT)
RETURNS VARCHAR(100)
DETERMINISTIC
READS SQL DATA
BEGIN
	DECLARE isFound VARCHAR(45) default 'Номер не принес прибыли';
    DECLARE counter int default 0;
	
    SELECT SUM(`Длительность проживания`*`Цена за ночь`) INTO counter 
    FROM `номер`
    JOIN  `запись о заселении`
    ON `запись о заселении`.`Номер`=`номер`.`Номер`
    WHERE `номер`.`Номер` = num ;
    
	IF counter > 0
		THEN SET isFound=CONCAT('Номер',' ', num,' ','принес',' ',counter,' ','рублей');
    END IF;
    RETURN isFound;
    
    END$$
DELIMITER ;
SELECT CountPribil(23);

CREATE VIEW `Самые свежие брони`AS 
SELECT  `idБронь`, `Кол-во гостей`, `Дата начала`, `Дата конца`, `ФИО`
FROM  `бронь`
INNER JOIN `гость`
ON `бронь`.`id гостя`=`гость`.`idГость`
ORDER BY `Дата начала` DESC;

DROP VIEW `Самые свежие брони`;

SELECT * FROM `Самые свежие брони`;


CREATE VIEW `Номера`AS 
SELECT `номер`.`Номер`,`Наименование`,`Цена за ночь`,`Оценка номера`,`Кухня`,`Бассейн`,`Ванная`,`Кондиционер`,`Напольное покрытие`,`Вид`,`Спальные места`, `Животные`,`Кол-во мест без доп платы`,`Кол-во доп мест за доп платы`
FROM  `номер`
INNER JOIN `номер/категория`
ON `номер`.`Номер`=`номер/категория`.`id_номера`
INNER JOIN `категория номера`
ON `номер/категория`.`id_категории`=`категория номера`.`idКатегория номера`
INNER JOIN `набор особенностей`
ON `набор особенностей`.`idНабор особенностей`=`номер`.`id_набора особенностей`
WHERE `Состояние`= 'готов' AND `Кол-во мест без доп платы`>=4
ORDER BY `Цена за ночь` ASC;

SELECT * FROM `Номера`;
DROP VIEW `Номера`;